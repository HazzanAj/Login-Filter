
public class LoginFilter extends AbstractAuthenticationProcessingFilter {

    public LoginFilter( String url, AuthenticationManager authManager){
        super( new AntPathRequestMatcher(url));
        setAuthenticationManager(authManager);
    }



    @Override
    public Authentication attemptAuthentication(
            HttpServletRequest req, HttpServletResponse res)
            throws AuthenticationException, IOException, ServletException {
        AccountCredentials creds = new ObjectMapper().readValue(req.getInputStream(), AccountCredentials.class);
        return getAuthenticationManager().authenticate(new UsernamePasswordAuthenticationToken(
                        creds.getUsername(),
                        creds.getPassword(),
                        Collections.emptyList()
                )
        );
}
@Override
protected void successfulAuthentication(
        HttpServletRequest req,
        HttpServletResponse res, FilterChain chain,
        Authentication auth) throws IOException, ServletException{
        AuthenticationService.addToken( res, auth.getName());
}
}
